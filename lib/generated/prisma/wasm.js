
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  impersonatedBy: 'impersonatedBy'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  phone: 'phone',
  birthDate: 'birthDate',
  gender: 'gender',
  displayName: 'displayName',
  bio: 'bio',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fullName: 'fullName',
  phone: 'phone',
  line1: 'line1',
  line2: 'line2',
  ward: 'ward',
  district: 'district',
  city: 'city',
  province: 'province',
  country: 'country',
  postalCode: 'postalCode',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  body: 'body',
  metadata: 'metadata',
  readAt: 'readAt',
  createdAt: 'createdAt'
};

exports.Prisma.ShopScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  name: 'name',
  slug: 'slug',
  description: 'description',
  logoUrl: 'logoUrl',
  coverUrl: 'coverUrl',
  status: 'status',
  ratingAvg: 'ratingAvg',
  ratingCount: 'ratingCount',
  contactEmail: 'contactEmail',
  contactPhone: 'contactPhone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ShopMemberScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  userId: 'userId',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  parentId: 'parentId',
  name: 'name',
  slug: 'slug',
  position: 'position',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  categoryId: 'categoryId',
  title: 'title',
  slug: 'slug',
  description: 'description',
  status: 'status',
  visibility: 'visibility',
  attributes: 'attributes',
  ratingAvg: 'ratingAvg',
  ratingCount: 'ratingCount',
  soldCount: 'soldCount',
  minPrice: 'minPrice',
  maxPrice: 'maxPrice',
  currency: 'currency',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  url: 'url',
  alt: 'alt',
  position: 'position',
  createdAt: 'createdAt'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  sku: 'sku',
  name: 'name',
  price: 'price',
  compareAt: 'compareAt',
  currency: 'currency',
  stock: 'stock',
  reserved: 'reserved',
  weightGrams: 'weightGrams',
  lengthMm: 'lengthMm',
  widthMm: 'widthMm',
  heightMm: 'heightMm',
  attributes: 'attributes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductTagScalarFieldEnum = {
  productId: 'productId',
  tagId: 'tagId'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  variantId: 'variantId',
  quantity: 'quantity',
  priceSnap: 'priceSnap',
  currency: 'currency',
  addedAt: 'addedAt'
};

exports.Prisma.WishlistScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.WishlistItemScalarFieldEnum = {
  id: 'id',
  wishlistId: 'wishlistId',
  productId: 'productId',
  createdAt: 'createdAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  userId: 'userId',
  shopId: 'shopId',
  status: 'status',
  paymentStatus: 'paymentStatus',
  fulfillmentStatus: 'fulfillmentStatus',
  currency: 'currency',
  itemsTotal: 'itemsTotal',
  shippingFee: 'shippingFee',
  discountTotal: 'discountTotal',
  taxTotal: 'taxTotal',
  grandTotal: 'grandTotal',
  shippingAddress: 'shippingAddress',
  billingAddress: 'billingAddress',
  contactEmail: 'contactEmail',
  contactPhone: 'contactPhone',
  notes: 'notes',
  placedAt: 'placedAt',
  updatedAt: 'updatedAt',
  canceledAt: 'canceledAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  variantId: 'variantId',
  title: 'title',
  sku: 'sku',
  unitPrice: 'unitPrice',
  quantity: 'quantity',
  discount: 'discount',
  total: 'total',
  metadata: 'metadata'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  provider: 'provider',
  method: 'method',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  externalId: 'externalId',
  reference: 'reference',
  rawPayload: 'rawPayload',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShipmentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  carrier: 'carrier',
  trackingNumber: 'trackingNumber',
  status: 'status',
  shippedAt: 'shippedAt',
  deliveredAt: 'deliveredAt',
  addressSnap: 'addressSnap',
  createdAt: 'createdAt'
};

exports.Prisma.RefundScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  paymentId: 'paymentId',
  amount: 'amount',
  reason: 'reason',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.ReturnRequestScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  userId: 'userId',
  reason: 'reason',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.ReturnItemScalarFieldEnum = {
  id: 'id',
  returnRequestId: 'returnRequestId',
  orderItemId: 'orderItemId',
  quantity: 'quantity',
  reason: 'reason'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId',
  orderItemId: 'orderItemId',
  rating: 'rating',
  title: 'title',
  body: 'body',
  images: 'images',
  likes: 'likes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductQuestionScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId',
  body: 'body',
  answer: 'answer',
  answeredAt: 'answeredAt',
  createdAt: 'createdAt'
};

exports.Prisma.VoucherScalarFieldEnum = {
  id: 'id',
  code: 'code',
  type: 'type',
  value: 'value',
  maxDiscount: 'maxDiscount',
  minSubtotal: 'minSubtotal',
  currency: 'currency',
  startAt: 'startAt',
  endAt: 'endAt',
  usageLimit: 'usageLimit',
  perUserLimit: 'perUserLimit',
  shopId: 'shopId',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.VoucherCategoryScalarFieldEnum = {
  voucherId: 'voucherId',
  categoryId: 'categoryId'
};

exports.Prisma.VoucherProductScalarFieldEnum = {
  voucherId: 'voucherId',
  productId: 'productId'
};

exports.Prisma.VoucherRedemptionScalarFieldEnum = {
  id: 'id',
  voucherId: 'voucherId',
  orderId: 'orderId',
  userId: 'userId',
  usedAt: 'usedAt'
};

exports.Prisma.OrderVoucherScalarFieldEnum = {
  orderId: 'orderId',
  voucherId: 'voucherId'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  shopId: 'shopId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationParticipantScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId',
  shopId: 'shopId',
  role: 'role',
  joinedAt: 'joinedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderUserId: 'senderUserId',
  senderShopId: 'senderShopId',
  type: 'type',
  content: 'content',
  attachments: 'attachments',
  createdAt: 'createdAt',
  readAt: 'readAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  SELLER: 'SELLER',
  ADMIN: 'ADMIN'
};

exports.ShopStatus = exports.$Enums.ShopStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  CLOSED: 'CLOSED'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.Visibility = exports.$Enums.Visibility = {
  PUBLIC: 'PUBLIC',
  UNLISTED: 'UNLISTED',
  PRIVATE: 'PRIVATE'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  AWAITING_PAYMENT: 'AWAITING_PAYMENT',
  PAID: 'PAID',
  PROCESSING: 'PROCESSING',
  PARTIALLY_FULFILLED: 'PARTIALLY_FULFILLED',
  FULFILLED: 'FULFILLED',
  PARTIALLY_SHIPPED: 'PARTIALLY_SHIPPED',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELED: 'CANCELED',
  REFUNDED: 'REFUNDED',
  EXPIRED: 'EXPIRED'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  NOT_PAID: 'NOT_PAID',
  PENDING: 'PENDING',
  AUTHORIZED: 'AUTHORIZED',
  PAID: 'PAID',
  PARTIALLY_REFUNDED: 'PARTIALLY_REFUNDED',
  REFUNDED: 'REFUNDED',
  FAILED: 'FAILED',
  CANCELED: 'CANCELED'
};

exports.FulfillmentStatus = exports.$Enums.FulfillmentStatus = {
  NOT_FULFILLED: 'NOT_FULFILLED',
  PARTIALLY_FULFILLED: 'PARTIALLY_FULFILLED',
  FULFILLED: 'FULFILLED',
  RETURNED: 'RETURNED'
};

exports.PaymentProvider = exports.$Enums.PaymentProvider = {
  CASH: 'CASH',
  STRIPE: 'STRIPE',
  PAYPAL: 'PAYPAL',
  CASSO: 'CASSO',
  OTHER: 'OTHER'
};

exports.ConversationType = exports.$Enums.ConversationType = {
  USER_SELLER: 'USER_SELLER',
  USER_PLATFORM: 'USER_PLATFORM',
  SELLER_PLATFORM: 'SELLER_PLATFORM'
};

exports.MessageType = exports.$Enums.MessageType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  SYSTEM: 'SYSTEM'
};

exports.Currency = exports.$Enums.Currency = {
  VND: 'VND',
  USD: 'USD'
};

exports.VoucherType = exports.$Enums.VoucherType = {
  PERCENT: 'PERCENT',
  FIXED: 'FIXED',
  SHIPPING: 'SHIPPING'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  UserProfile: 'UserProfile',
  Address: 'Address',
  Notification: 'Notification',
  Shop: 'Shop',
  ShopMember: 'ShopMember',
  Category: 'Category',
  Tag: 'Tag',
  Product: 'Product',
  ProductImage: 'ProductImage',
  ProductVariant: 'ProductVariant',
  ProductTag: 'ProductTag',
  Cart: 'Cart',
  CartItem: 'CartItem',
  Wishlist: 'Wishlist',
  WishlistItem: 'WishlistItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Payment: 'Payment',
  Shipment: 'Shipment',
  Refund: 'Refund',
  ReturnRequest: 'ReturnRequest',
  ReturnItem: 'ReturnItem',
  Review: 'Review',
  ProductQuestion: 'ProductQuestion',
  Voucher: 'Voucher',
  VoucherCategory: 'VoucherCategory',
  VoucherProduct: 'VoucherProduct',
  VoucherRedemption: 'VoucherRedemption',
  OrderVoucher: 'OrderVoucher',
  Conversation: 'Conversation',
  ConversationParticipant: 'ConversationParticipant',
  Message: 'Message'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/thong/Documents/Source_Codes/Projects/ecommerce_nextjs/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/thong/Documents/Source_Codes/Projects/ecommerce_nextjs/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ---------- Enums ----------\nenum Role {\n  USER\n  SELLER\n  ADMIN\n}\n\nenum ShopStatus {\n  PENDING\n  ACTIVE\n  SUSPENDED\n  CLOSED\n}\n\nenum ProductStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum Visibility {\n  PUBLIC\n  UNLISTED\n  PRIVATE\n}\n\nenum OrderStatus {\n  PENDING\n  AWAITING_PAYMENT\n  PAID\n  PROCESSING\n  PARTIALLY_FULFILLED\n  FULFILLED\n  PARTIALLY_SHIPPED\n  SHIPPED\n  DELIVERED\n  CANCELED\n  REFUNDED\n  EXPIRED\n}\n\nenum PaymentStatus {\n  NOT_PAID\n  PENDING\n  AUTHORIZED\n  PAID\n  PARTIALLY_REFUNDED\n  REFUNDED\n  FAILED\n  CANCELED\n}\n\nenum FulfillmentStatus {\n  NOT_FULFILLED\n  PARTIALLY_FULFILLED\n  FULFILLED\n  RETURNED\n}\n\nenum PaymentProvider {\n  CASH\n  STRIPE\n  PAYPAL\n  CASSO\n  OTHER\n}\n\nenum ConversationType {\n  USER_SELLER\n  USER_PLATFORM\n  SELLER_PLATFORM\n}\n\nenum MessageType {\n  TEXT\n  IMAGE\n  SYSTEM\n}\n\nenum Currency {\n  VND\n  USD\n}\n\nmodel User {\n  id            String    @id @default(uuid()) @db.Uuid\n  name          String\n  email         String\n  emailVerified Boolean   @default(false)\n  image         String?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @default(now()) @updatedAt\n  sessions      Session[]\n  accounts      Account[]\n\n  role       String?\n  banned     Boolean?  @default(false)\n  banReason  String?\n  banExpires DateTime?\n\n  profile                   UserProfile?\n  addresses                 Address[]\n  notifications             Notification[]\n  carts                     Cart[]\n  wishlist                  Wishlist?\n  shopsOwned                Shop[]                    @relation(\"ShopsOwned\")\n  shopMemberships           ShopMember[]\n  orders                    Order[]\n  reviews                   Review[]\n  productQuestions          ProductQuestion[]\n  conversationsParticipants ConversationParticipant[]\n  messagesSentUser          Message[]                 @relation(\"MessageFromUser\")\n  ReturnRequest             ReturnRequest[]\n  VoucherRedemption         VoucherRedemption[]\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Session {\n  id        String   @id @default(uuid()) @db.Uuid\n  expiresAt DateTime\n  token     String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  ipAddress String?\n  userAgent String?\n  userId    String   @db.Uuid\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  impersonatedBy String?\n\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id @default(uuid()) @db.Uuid\n  accountId             String\n  providerId            String\n  userId                String    @db.Uuid\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String   @id @default(uuid()) @db.Uuid\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @default(now()) @updatedAt\n\n  @@map(\"verification\")\n}\n\nmodel UserProfile {\n  id          String    @id @default(uuid()) @db.Uuid\n  userId      String    @unique @db.Uuid\n  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  phone       String?\n  birthDate   DateTime?\n  gender      String?\n  displayName String?\n  bio         String?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@map(\"user_profile\")\n}\n\nmodel Address {\n  id         String    @id @default(uuid()) @db.Uuid\n  userId     String    @db.Uuid\n  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  fullName   String\n  phone      String\n  line1      String\n  line2      String?\n  ward       String?\n  district   String?\n  city       String\n  province   String?\n  country    String    @default(\"VN\")\n  postalCode String?\n  isDefault  Boolean   @default(false)\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  deletedAt  DateTime?\n\n  @@index([userId, isDefault])\n  @@map(\"address\")\n}\n\nmodel Notification {\n  id        String    @id @default(uuid()) @db.Uuid\n  userId    String    @db.Uuid\n  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  type      String\n  title     String\n  body      String\n  metadata  Json?\n  readAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  @@index([userId, readAt])\n  @@map(\"notification\")\n}\n\nmodel Shop {\n  id           String     @id @default(uuid()) @db.Uuid\n  ownerId      String     @db.Uuid\n  owner        User       @relation(\"ShopsOwned\", fields: [ownerId], references: [id], onDelete: Restrict)\n  name         String\n  slug         String     @unique\n  description  String?\n  logoUrl      String?\n  coverUrl     String?\n  status       ShopStatus @default(PENDING)\n  ratingAvg    Decimal    @default(0) @db.Decimal(2, 1)\n  ratingCount  Int        @default(0)\n  contactEmail String?\n  contactPhone String?\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  deletedAt    DateTime?\n\n  members                 ShopMember[]\n  products                Product[]\n  orders                  Order[]\n  conversations           Conversation[]\n  Voucher                 Voucher[]\n  ConversationParticipant ConversationParticipant[]\n  Message                 Message[]\n\n  @@index([ownerId, status])\n  @@map(\"shop\")\n}\n\nmodel ShopMember {\n  id        String   @id @default(uuid()) @db.Uuid\n  shopId    String   @db.Uuid\n  userId    String   @db.Uuid\n  role      Role     @default(SELLER)\n  createdAt DateTime @default(now())\n\n  shop Shop @relation(fields: [shopId], references: [id], onDelete: Cascade)\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([shopId, userId])\n  @@map(\"shop_member\")\n}\n\nmodel Category {\n  id        String     @id @default(uuid()) @db.Uuid\n  parentId  String?    @db.Uuid\n  parent    Category?  @relation(\"CategoryToCategory\", fields: [parentId], references: [id], onDelete: SetNull)\n  children  Category[] @relation(\"CategoryToCategory\")\n  name      String\n  slug      String     @unique\n  position  Int        @default(0)\n  isActive  Boolean    @default(true)\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @default(now()) @updatedAt\n\n  products        Product[]\n  VoucherCategory VoucherCategory[]\n\n  @@index([parentId, position])\n  @@map(\"category\")\n}\n\nmodel Tag {\n  id   String @id @default(uuid()) @db.Uuid\n  name String\n  slug String @unique\n\n  products ProductTag[]\n\n  @@map(\"tag\")\n}\n\nmodel Product {\n  id          String        @id @default(uuid()) @db.Uuid\n  shopId      String        @db.Uuid\n  shop        Shop          @relation(fields: [shopId], references: [id], onDelete: Cascade)\n  categoryId  String?       @db.Uuid\n  category    Category?     @relation(fields: [categoryId], references: [id], onDelete: SetNull)\n  title       String\n  slug        String        @unique\n  description String?\n  status      ProductStatus @default(DRAFT)\n  visibility  Visibility    @default(PUBLIC)\n  attributes  Json?\n  ratingAvg   Decimal       @default(0) @db.Decimal(2, 1)\n  ratingCount Int           @default(0)\n  soldCount   Int           @default(0)\n  minPrice    Decimal       @db.Decimal(14, 2)\n  maxPrice    Decimal       @db.Decimal(14, 2)\n  currency    Currency      @default(VND)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @default(now()) @updatedAt\n  deletedAt   DateTime?\n\n  images         ProductImage[]\n  variants       ProductVariant[]\n  tags           ProductTag[]\n  reviews        Review[]\n  questions      ProductQuestion[]\n  wishlisted     WishlistItem[]\n  orderItems     OrderItem[]\n  VoucherProduct VoucherProduct[]\n\n  @@index([shopId, status, visibility])\n  @@index([categoryId])\n  @@map(\"product\")\n}\n\nmodel ProductImage {\n  id        String   @id @default(uuid()) @db.Uuid\n  productId String   @db.Uuid\n  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  url       String\n  alt       String?\n  position  Int      @default(0)\n  createdAt DateTime @default(now())\n\n  @@index([productId, position])\n  @@map(\"product_image\")\n}\n\nmodel ProductVariant {\n  id          String   @id @default(uuid()) @db.Uuid\n  productId   String   @db.Uuid\n  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  sku         String   @unique\n  name        String?\n  price       Decimal  @db.Decimal(14, 2)\n  compareAt   Decimal? @db.Decimal(14, 2)\n  currency    Currency @default(VND)\n  stock       Int      @default(0)\n  reserved    Int      @default(0)\n  weightGrams Int?\n  lengthMm    Int?\n  widthMm     Int?\n  heightMm    Int?\n  attributes  Json?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @default(now()) @updatedAt\n\n  orderItems OrderItem[]\n  cartItems  CartItem[]\n\n  @@index([productId, isActive])\n  @@map(\"product_variant\")\n}\n\nmodel ProductTag {\n  productId String  @db.Uuid\n  tagId     String  @db.Uuid\n  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)\n\n  @@id([productId, tagId])\n  @@map(\"product_tag\")\n}\n\nmodel Cart {\n  id        String   @id @default(uuid()) @db.Uuid\n  userId    String   @unique @db.Uuid\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  items CartItem[]\n\n  @@map(\"cart\")\n}\n\nmodel CartItem {\n  id        String   @id @default(uuid()) @db.Uuid\n  cartId    String   @db.Uuid\n  variantId String   @db.Uuid\n  quantity  Int      @default(1)\n  priceSnap Decimal  @db.Decimal(14, 2)\n  currency  Currency @default(VND)\n  addedAt   DateTime @default(now())\n\n  cart    Cart           @relation(fields: [cartId], references: [id], onDelete: Cascade)\n  variant ProductVariant @relation(fields: [variantId], references: [id], onDelete: Restrict)\n\n  @@unique([cartId, variantId])\n  @@map(\"cart_item\")\n}\n\nmodel Wishlist {\n  id        String   @id @default(uuid()) @db.Uuid\n  userId    String   @unique @db.Uuid\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now())\n\n  items WishlistItem[]\n\n  @@map(\"wishlist\")\n}\n\nmodel WishlistItem {\n  id         String   @id @default(uuid()) @db.Uuid\n  wishlistId String   @db.Uuid\n  productId  String   @db.Uuid\n  createdAt  DateTime @default(now())\n\n  wishlist Wishlist @relation(fields: [wishlistId], references: [id], onDelete: Cascade)\n  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@unique([wishlistId, productId])\n  @@map(\"wishlist_item\")\n}\n\nmodel Order {\n  id                String            @id @default(uuid()) @db.Uuid\n  orderNumber       String            @unique\n  userId            String            @db.Uuid\n  shopId            String            @db.Uuid\n  status            OrderStatus       @default(PENDING)\n  paymentStatus     PaymentStatus     @default(NOT_PAID)\n  fulfillmentStatus FulfillmentStatus @default(NOT_FULFILLED)\n  currency          Currency          @default(VND)\n\n  itemsTotal    Decimal @db.Decimal(14, 2)\n  shippingFee   Decimal @default(0) @db.Decimal(14, 2)\n  discountTotal Decimal @default(0) @db.Decimal(14, 2)\n  taxTotal      Decimal @default(0) @db.Decimal(14, 2)\n  grandTotal    Decimal @db.Decimal(14, 2)\n\n  shippingAddress Json\n  billingAddress  Json?\n  contactEmail    String?\n  contactPhone    String?\n\n  notes      String?\n  placedAt   DateTime  @default(now())\n  updatedAt  DateTime  @default(now()) @updatedAt\n  canceledAt DateTime?\n\n  user              User                @relation(fields: [userId], references: [id], onDelete: Restrict)\n  shop              Shop                @relation(fields: [shopId], references: [id], onDelete: Restrict)\n  items             OrderItem[]\n  payments          Payment[]\n  shipments         Shipment[]\n  refunds           Refund[]\n  vouchers          OrderVoucher[]\n  ReturnRequest     ReturnRequest[]\n  VoucherRedemption VoucherRedemption[]\n\n  @@index([userId, placedAt])\n  @@index([shopId, status])\n  @@map(\"order\")\n}\n\nmodel OrderItem {\n  id        String  @id @default(uuid()) @db.Uuid\n  orderId   String  @db.Uuid\n  productId String  @db.Uuid\n  variantId String? @db.Uuid\n  title     String\n  sku       String?\n  unitPrice Decimal @db.Decimal(14, 2)\n  quantity  Int\n  discount  Decimal @default(0) @db.Decimal(14, 2)\n  total     Decimal @db.Decimal(14, 2)\n  metadata  Json?\n\n  order      Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  product    Product         @relation(fields: [productId], references: [id], onDelete: Restrict)\n  variant    ProductVariant? @relation(fields: [variantId], references: [id], onDelete: SetNull)\n  review     Review?\n  ReturnItem ReturnItem[]\n\n  @@index([orderId])\n  @@map(\"order_item\")\n}\n\nmodel Payment {\n  id         String          @id @default(uuid()) @db.Uuid\n  orderId    String          @db.Uuid\n  provider   PaymentProvider\n  method     String?\n  amount     Decimal         @db.Decimal(14, 2)\n  currency   Currency        @default(VND)\n  status     PaymentStatus   @default(PENDING)\n  externalId String?\n  reference  String?\n  rawPayload Json?\n  createdAt  DateTime        @default(now())\n  updatedAt  DateTime        @default(now()) @updatedAt\n\n  order  Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  Refund Refund[]\n\n  @@index([orderId, status])\n  @@map(\"payment\")\n}\n\nmodel Shipment {\n  id             String    @id @default(uuid()) @db.Uuid\n  orderId        String    @db.Uuid\n  carrier        String?\n  trackingNumber String?\n  status         String?\n  shippedAt      DateTime?\n  deliveredAt    DateTime?\n  addressSnap    Json\n  createdAt      DateTime  @default(now())\n\n  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  @@index([orderId])\n  @@map(\"shipment\")\n}\n\nmodel Refund {\n  id        String   @id @default(uuid()) @db.Uuid\n  orderId   String   @db.Uuid\n  paymentId String?  @db.Uuid\n  amount    Decimal  @db.Decimal(14, 2)\n  reason    String?\n  status    String   @default(\"PENDING\")\n  createdAt DateTime @default(now())\n\n  order   Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  payment Payment? @relation(fields: [paymentId], references: [id], onDelete: SetNull)\n\n  @@index([orderId])\n  @@map(\"refund\")\n}\n\nmodel ReturnRequest {\n  id        String   @id @default(uuid()) @db.Uuid\n  orderId   String   @db.Uuid\n  userId    String   @db.Uuid\n  reason    String?\n  status    String   @default(\"OPEN\")\n  createdAt DateTime @default(now())\n\n  order Order        @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  user  User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  items ReturnItem[]\n\n  @@index([orderId, status])\n  @@map(\"return_request\")\n}\n\nmodel ReturnItem {\n  id              String  @id @default(uuid()) @db.Uuid\n  returnRequestId String  @db.Uuid\n  orderItemId     String  @db.Uuid\n  quantity        Int\n  reason          String?\n\n  returnRequest ReturnRequest @relation(fields: [returnRequestId], references: [id], onDelete: Cascade)\n  orderItem     OrderItem     @relation(fields: [orderItemId], references: [id], onDelete: Restrict)\n\n  @@map(\"return_item\")\n}\n\nmodel Review {\n  id          String   @id @default(uuid()) @db.Uuid\n  productId   String   @db.Uuid\n  userId      String   @db.Uuid\n  orderItemId String?  @unique @db.Uuid\n  rating      Int\n  title       String?\n  body        String?\n  images      Json?\n  likes       Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @default(now()) @updatedAt\n\n  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade)\n  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  orderItem OrderItem? @relation(fields: [orderItemId], references: [id], onDelete: SetNull)\n\n  @@unique([userId, productId, orderItemId])\n  @@index([productId, rating])\n  @@map(\"review\")\n}\n\nmodel ProductQuestion {\n  id         String    @id @default(uuid()) @db.Uuid\n  productId  String    @db.Uuid\n  userId     String    @db.Uuid\n  body       String\n  answer     String?\n  answeredAt DateTime?\n  createdAt  DateTime  @default(now())\n\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([productId])\n  @@map(\"product_question\")\n}\n\nenum VoucherType {\n  PERCENT\n  FIXED\n  SHIPPING\n}\n\nmodel Voucher {\n  id           String      @id @default(uuid()) @db.Uuid\n  code         String      @unique\n  type         VoucherType\n  value        Decimal     @db.Decimal(14, 2)\n  maxDiscount  Decimal?    @db.Decimal(14, 2)\n  minSubtotal  Decimal?    @db.Decimal(14, 2)\n  currency     Currency    @default(VND)\n  startAt      DateTime\n  endAt        DateTime\n  usageLimit   Int?\n  perUserLimit Int?\n  shopId       String?     @db.Uuid\n  isActive     Boolean     @default(true)\n  createdAt    DateTime    @default(now())\n\n  shop        Shop?               @relation(fields: [shopId], references: [id], onDelete: SetNull)\n  categories  VoucherCategory[]\n  products    VoucherProduct[]\n  redemptions VoucherRedemption[]\n  orders      OrderVoucher[]\n\n  @@index([shopId, isActive, startAt, endAt])\n  @@map(\"voucher\")\n}\n\nmodel VoucherCategory {\n  voucherId  String   @db.Uuid\n  categoryId String   @db.Uuid\n  voucher    Voucher  @relation(fields: [voucherId], references: [id], onDelete: Cascade)\n  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)\n\n  @@id([voucherId, categoryId])\n  @@map(\"voucher_category\")\n}\n\nmodel VoucherProduct {\n  voucherId String  @db.Uuid\n  productId String  @db.Uuid\n  voucher   Voucher @relation(fields: [voucherId], references: [id], onDelete: Cascade)\n  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@id([voucherId, productId])\n  @@map(\"voucher_product\")\n}\n\nmodel VoucherRedemption {\n  id        String   @id @default(uuid()) @db.Uuid\n  voucherId String   @db.Uuid\n  orderId   String   @db.Uuid\n  userId    String   @db.Uuid\n  usedAt    DateTime @default(now())\n\n  voucher Voucher @relation(fields: [voucherId], references: [id], onDelete: Cascade)\n  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([voucherId, orderId, userId])\n  @@map(\"voucher_redemption\")\n}\n\nmodel OrderVoucher {\n  orderId   String  @db.Uuid\n  voucherId String  @db.Uuid\n  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  voucher   Voucher @relation(fields: [voucherId], references: [id], onDelete: Restrict)\n\n  @@id([orderId, voucherId])\n  @@map(\"order_voucher\")\n}\n\nmodel Conversation {\n  id        String           @id @default(uuid()) @db.Uuid\n  type      ConversationType\n  shopId    String?          @db.Uuid\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @default(now()) @updatedAt\n\n  shop         Shop?                     @relation(fields: [shopId], references: [id], onDelete: SetNull)\n  participants ConversationParticipant[]\n  messages     Message[]\n\n  @@index([type, shopId])\n  @@map(\"conversation\")\n}\n\nmodel ConversationParticipant {\n  id             String   @id @default(uuid()) @db.Uuid\n  conversationId String   @db.Uuid\n  userId         String?  @db.Uuid\n  shopId         String?  @db.Uuid\n  role           String?\n  joinedAt       DateTime @default(now())\n\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  user         User?        @relation(fields: [userId], references: [id], onDelete: Cascade)\n  shop         Shop?        @relation(fields: [shopId], references: [id], onDelete: Cascade)\n\n  @@unique([conversationId, userId, shopId])\n  @@map(\"conversation_participant\")\n}\n\nmodel Message {\n  id             String      @id @default(uuid()) @db.Uuid\n  conversationId String      @db.Uuid\n  senderUserId   String?     @db.Uuid\n  senderShopId   String?     @db.Uuid\n  type           MessageType @default(TEXT)\n  content        String\n  attachments    Json?\n  createdAt      DateTime    @default(now())\n  readAt         DateTime?\n\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  senderUser   User?        @relation(\"MessageFromUser\", fields: [senderUserId], references: [id], onDelete: SetNull)\n  senderShop   Shop?        @relation(fields: [senderShopId], references: [id], onDelete: SetNull)\n\n  @@index([conversationId, createdAt])\n  @@map(\"message\")\n}\n",
  "inlineSchemaHash": "63f1f97b9f5b4de9b25db8b3b864edc24aec6326605cc79684445dcae17fc1fc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"UserProfile\",\"relationName\":\"UserToUserProfile\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"wishlist\",\"kind\":\"object\",\"type\":\"Wishlist\",\"relationName\":\"UserToWishlist\"},{\"name\":\"shopsOwned\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ShopsOwned\"},{\"name\":\"shopMemberships\",\"kind\":\"object\",\"type\":\"ShopMember\",\"relationName\":\"ShopMemberToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"productQuestions\",\"kind\":\"object\",\"type\":\"ProductQuestion\",\"relationName\":\"ProductQuestionToUser\"},{\"name\":\"conversationsParticipants\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"ConversationParticipantToUser\"},{\"name\":\"messagesSentUser\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageFromUser\"},{\"name\":\"ReturnRequest\",\"kind\":\"object\",\"type\":\"ReturnRequest\",\"relationName\":\"ReturnRequestToUser\"},{\"name\":\"VoucherRedemption\",\"kind\":\"object\",\"type\":\"VoucherRedemption\",\"relationName\":\"UserToVoucherRedemption\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"UserProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserProfile\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_profile\"},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AddressToUser\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"line1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"line2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ward\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"address\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"notification\"},\"Shop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShopsOwned\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ShopStatus\"},{\"name\":\"ratingAvg\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contactEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"ShopMember\",\"relationName\":\"ShopToShopMember\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToShop\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToShop\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToShop\"},{\"name\":\"Voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"ShopToVoucher\"},{\"name\":\"ConversationParticipant\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"ConversationParticipantToShop\"},{\"name\":\"Message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToShop\"}],\"dbName\":\"shop\"},\"ShopMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ShopToShopMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShopMemberToUser\"}],\"dbName\":\"shop_member\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToCategory\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToCategory\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"VoucherCategory\",\"kind\":\"object\",\"type\":\"VoucherCategory\",\"relationName\":\"CategoryToVoucherCategory\"}],\"dbName\":\"category\"},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"ProductTag\",\"relationName\":\"ProductTagToTag\"}],\"dbName\":\"tag\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ProductToShop\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"Visibility\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ratingAvg\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"soldCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"Currency\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"ProductImage\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"ProductTag\",\"relationName\":\"ProductToProductTag\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProductToReview\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"ProductQuestion\",\"relationName\":\"ProductToProductQuestion\"},{\"name\":\"wishlisted\",\"kind\":\"object\",\"type\":\"WishlistItem\",\"relationName\":\"ProductToWishlistItem\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"VoucherProduct\",\"kind\":\"object\",\"type\":\"VoucherProduct\",\"relationName\":\"ProductToVoucherProduct\"}],\"dbName\":\"product\"},\"ProductImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"product_image\"},\"ProductVariant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"compareAt\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"Currency\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reserved\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weightGrams\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lengthMm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"widthMm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"heightMm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProductVariant\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProductVariant\"}],\"dbName\":\"product_variant\"},\"ProductTag\":{\"fields\":[{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"ProductTagToTag\"}],\"dbName\":\"product_tag\"},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"}],\"dbName\":\"cart\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceSnap\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"Currency\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"CartItemToProductVariant\"}],\"dbName\":\"cart_item\"},\"Wishlist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWishlist\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"WishlistItem\",\"relationName\":\"WishlistToWishlistItem\"}],\"dbName\":\"wishlist\"},\"WishlistItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wishlistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"wishlist\",\"kind\":\"object\",\"type\":\"Wishlist\",\"relationName\":\"WishlistToWishlistItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToWishlistItem\"}],\"dbName\":\"wishlist_item\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"fulfillmentStatus\",\"kind\":\"enum\",\"type\":\"FulfillmentStatus\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"Currency\"},{\"name\":\"itemsTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shippingFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"grandTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"billingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contactEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"OrderToShop\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrderToPayment\"},{\"name\":\"shipments\",\"kind\":\"object\",\"type\":\"Shipment\",\"relationName\":\"OrderToShipment\"},{\"name\":\"refunds\",\"kind\":\"object\",\"type\":\"Refund\",\"relationName\":\"OrderToRefund\"},{\"name\":\"vouchers\",\"kind\":\"object\",\"type\":\"OrderVoucher\",\"relationName\":\"OrderToOrderVoucher\"},{\"name\":\"ReturnRequest\",\"kind\":\"object\",\"type\":\"ReturnRequest\",\"relationName\":\"OrderToReturnRequest\"},{\"name\":\"VoucherRedemption\",\"kind\":\"object\",\"type\":\"VoucherRedemption\",\"relationName\":\"OrderToVoucherRedemption\"}],\"dbName\":\"order\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"OrderItemToProductVariant\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"OrderItemToReview\"},{\"name\":\"ReturnItem\",\"kind\":\"object\",\"type\":\"ReturnItem\",\"relationName\":\"OrderItemToReturnItem\"}],\"dbName\":\"order_item\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"PaymentProvider\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"Currency\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"externalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawPayload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPayment\"},{\"name\":\"Refund\",\"kind\":\"object\",\"type\":\"Refund\",\"relationName\":\"PaymentToRefund\"}],\"dbName\":\"payment\"},\"Shipment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"addressSnap\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToShipment\"}],\"dbName\":\"shipment\"},\"Refund\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToRefund\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToRefund\"}],\"dbName\":\"refund\"},\"ReturnRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToReturnRequest\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReturnRequestToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"ReturnItem\",\"relationName\":\"ReturnItemToReturnRequest\"}],\"dbName\":\"return_request\"},\"ReturnItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"returnRequestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"returnRequest\",\"kind\":\"object\",\"type\":\"ReturnRequest\",\"relationName\":\"ReturnItemToReturnRequest\"},{\"name\":\"orderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToReturnItem\"}],\"dbName\":\"return_item\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"orderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToReview\"}],\"dbName\":\"review\"},\"ProductQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductQuestion\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductQuestionToUser\"}],\"dbName\":\"product_question\"},\"Voucher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"VoucherType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxDiscount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"minSubtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"Currency\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usageLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"perUserLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ShopToVoucher\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"VoucherCategory\",\"relationName\":\"VoucherToVoucherCategory\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"VoucherProduct\",\"relationName\":\"VoucherToVoucherProduct\"},{\"name\":\"redemptions\",\"kind\":\"object\",\"type\":\"VoucherRedemption\",\"relationName\":\"VoucherToVoucherRedemption\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"OrderVoucher\",\"relationName\":\"OrderVoucherToVoucher\"}],\"dbName\":\"voucher\"},\"VoucherCategory\":{\"fields\":[{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherToVoucherCategory\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToVoucherCategory\"}],\"dbName\":\"voucher_category\"},\"VoucherProduct\":{\"fields\":[{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherToVoucherProduct\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToVoucherProduct\"}],\"dbName\":\"voucher_product\"},\"VoucherRedemption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherToVoucherRedemption\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToVoucherRedemption\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVoucherRedemption\"}],\"dbName\":\"voucher_redemption\"},\"OrderVoucher\":{\"fields\":[{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderVoucher\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"OrderVoucherToVoucher\"}],\"dbName\":\"order_voucher\"},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ConversationType\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ConversationToShop\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"ConversationToConversationParticipant\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":\"conversation\"},\"ConversationParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToConversationParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationParticipantToUser\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ConversationParticipantToShop\"}],\"dbName\":\"conversation_participant\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderShopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MessageType\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"senderUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageFromUser\"},{\"name\":\"senderShop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"MessageToShop\"}],\"dbName\":\"message\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

